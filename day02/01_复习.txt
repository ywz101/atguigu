JavaScript
    - JavaScript 是一个运行在浏览器端的脚本语言
    - 但是实质今日JS的运行环境已经不仅仅局限于浏览器 (Node.js)
    - JS是一个动态类型的语言
    - JS的标准被称为ECMAScript (ECMA262) 2015年开始
    - 自2015年起, ES标准每年(6月)更新
        ES2015(ES6)
        ES2016
        ...
        ES2020

    - 这一阶段主要学习的内容：
        ES标准
            - 基本语法
        DOM
            - 文档对象模型，用来操作网页
        BOM
            - 浏览器对象模型，用来操作浏览器

    - JS的编写位置：
        1. 编写到script标签中
            <script>JS代码</script>
        2. 编写到外部的JS文件中
            <script src="xxx.js"></script>
        3. 编写到标签的指定属性中
            <button onclick="JS代码"></button>
            <a href="javascript:JS代码"></a>

    - JS的输出语句
        弹出警告框：
            alert('xxx'); 
        在控制台输出日志：(调试常用)
            console.log('xxx');
        在网页中打印内容：
            document.write('xxx');


    - JS的基本语法：
        1. 单行注释：
            // 单行注释内容
        2. 多行注释
            /*
                多行注释内容
                多行注释内容
            */
            - 多行注释中, 不能嵌套使用
    
        3. JS每一条语句都应该以分号结尾
        4. JS中严格区分大小写
        5. JS中多个换行和空格会被忽略

    - JS中的字面量和变量：
        - 字面量
            - 字面量就是一个一个的值, 像1、2、'hello'、true、NaN ...
            - 所有的字面量在JS中都可以直接使用, 但是一般不会这么做

        - 变量 
            - 变量用来存储值, 一个变量可以用来"存储"任意值
            - 并且变量中"存储"的值可以任意修改
            - JS中的变量并没有直接存储值, 而是存储值的内存地址
            - JS中的变量更像是一个值的别名

        - 变量的使用
            - 声明变量：
                let 变量名;
                var 变量名; (老版本)

            - 为变量赋值：
                变量名 = 值;

            - 变量初始化(声明和赋值同时进行)
                let 变量名 = 值;
                var 变量名 = 值;

        - JS中的常量:
            const 常量 = 值;
                常量只能进行一次赋值, 并且最好声明和赋值同时进行, 先声明，再赋值会报错;
            
        - 标识符
            - 在jS中所有可以自主命名的内容都可以认为是标识符
                像：变量名、函数名、类名、(属性名)
            - 规范：
                1. 标识符中可以含有字母、数字、_、$, 但是不能以数字开头
                2. 标识符不能是JS中的关键字和保留字，也不建议使用JS中的函数、变量名作为标识符
                3. 标识符采用驼峰命名法
                    - 小驼峰
                        - 首字母小写，每个单词开头大写，其余小写
                        - xxxyyyzzz -> xxxYyyZzz
                    - 大驼峰 (类名)   
                        - 首字母大写，每个单词开头大写，其余小写
                        - xxxyyyzzz -> XxxYyyZzz


        - 数据类型
            基本数据类型 (不可变类型)
                - string
                    - JS中的字符串使用引号引起来，单双都行，但是不要混合
                    - 同类型的引号不要发生嵌套
                    - 转义字符，JS中使用 \ 作为转义字符
                        \' 表示 '
                        \" 表示 "
                        \t 表示 Tab制表符
                        \n 表示 换行
                        \\ 表示 \
                    - 模板字符串
                        - 使用 ` (反单引号)来表示模板字符串
                        - 模板字符串可以跨行使用，并且在模板中可以直接嵌套入变量
                        - 例子：
                            let str = `xxx${变量}`;

                    - 使用 typeof 检查一个字符串中时，它会返回 'string'

                - number
                    - 在JS中所有的整数和浮点数都是number类型
                    - 特殊的数字：
                        Infinity (无穷)
                        NaN (Not a Number) 非法数字
                    - 其它进制的数字
                        二进制: 0b开头
                        八进制: 0o开头
                        十六进制：0x开头
                    - 在JS中可以确保大部分的整数运算取得一个精确的结果(别太大)
                        浮动数运算可能会得到一个近似值，所以不要直接在JS中进行精度要求高的运算

                    - 大整数 (bigint)
                        - ES2020中新推出的数值类型，大整数需要n结尾
                        - 使用 typeof 检查大整数时，会返回 'bigint'

                - boolean
                    - 布尔值用来进行逻辑判断，布尔值只有两个
                        true 表示真
                        false 表示假
                    - 使用 typeof 检查 boolean 时会返回 'boolean'

                - null
                    - 空值用来表示一个空的对象，只有一个值
                        null
                    - 使用 typeof 检查空值时，返回 ’object‘

                - undefined
                    - 未定义用来表示声明但是没有赋值的变量，只有一个值
                        undefined
                    - 使用 typeof 检查未定义时，会返回 'undefined'
                    - 一般情况下，不会主动使用 undefined